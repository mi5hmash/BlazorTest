@page "/weather"
@inject HttpClient Http
@code { private const string PageTitle = "Weather"; }

<PageTitle>@PageTitle</PageTitle>

<h1>@PageTitle</h1>

<p>This component simulates fetching data from the server.</p>

@if (_forecasts == null)
{
    <LoadingPopup Message="Fetching data from the server..." />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in _forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? _forecasts;
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000);
        _forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    /// <summary>
    /// Model of a Weather Forecast JSON file.
    /// </summary>
    public class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
